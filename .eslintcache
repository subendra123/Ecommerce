[{"E:\\reactpro\\Previous\\interview\\src\\index.js":"1","E:\\reactpro\\Previous\\interview\\src\\App.js":"2","E:\\reactpro\\Previous\\Ecommerce\\src\\index.js":"3","E:\\reactpro\\Previous\\Ecommerce\\src\\App.js":"4","E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\cart.jsx":"5","E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\Cart.jsx":"6","E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\items.jsx":"7","E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\products.jsx":"8","E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\ContextCart.jsx":"9","E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\reducer.jsx":"10"},{"size":152,"mtime":1610118957266,"results":"11","hashOfConfig":"12"},{"size":440,"mtime":1622618039530,"results":"13","hashOfConfig":"12"},{"size":152,"mtime":1610118957266,"results":"14","hashOfConfig":"15"},{"size":193,"mtime":1623463297915,"results":"16","hashOfConfig":"15"},{"size":630,"mtime":1623403396024,"results":"17","hashOfConfig":"15"},{"size":1376,"mtime":1623662978759,"results":"18","hashOfConfig":"15"},{"size":1292,"mtime":1623650815912,"results":"19","hashOfConfig":"15"},{"size":1388,"mtime":1623650819264,"results":"20","hashOfConfig":"15"},{"size":2152,"mtime":1623650944706,"results":"21","hashOfConfig":"15"},{"size":2138,"mtime":1623651089301,"results":"22","hashOfConfig":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"g57and",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"6js8xb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},"E:\\reactpro\\Previous\\interview\\src\\index.js",[],["49","50"],"E:\\reactpro\\Previous\\interview\\src\\App.js",["51"],"E:\\reactpro\\Previous\\Ecommerce\\src\\index.js",[],["52","53"],"E:\\reactpro\\Previous\\Ecommerce\\src\\App.js",[],"E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\cart.jsx",[],"E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\Cart.jsx",["54"],"import React, {useReducer, createContext, useEffect} from 'react'\r\n\r\nimport Items from './items'\r\nimport {Products} from './products'\r\nimport ContextCart from './ContextCart'\r\nimport {reducer} from './reducer'\r\n\r\nexport const CartContext = createContext();\r\n\r\n\r\nconst  initialState = {\r\n  item : Products,\r\n  totalAmount: 0,\r\ntotalItem: 0,\r\n\r\n}\r\n\r\nconst Cart = () => {\r\n    //const [item, setItem] = useState(Products);\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const removeItem = (id) => {\r\n        return dispatch ({\r\n          type:\"REMOVE_ITEM\",\r\n          payload:id,\r\n        })\r\n    }\r\n\r\n    const clearCart = () => {\r\n      return dispatch ({\r\n        type: \"CLEAR_CART\"\r\n      })\r\n    };\r\n\r\n    const increment = (id) => {\r\n        return dispatch ({\r\n        type:\"INCREMENT\",\r\n        payload:id,\r\n      })\r\n    }\r\n      \r\n    const decrement = (id) => {\r\n      return dispatch ({\r\n      type:\"DECREMENT\",\r\n      payload:id,\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"GET_TOTAL\" });\r\n     // console.log(\"its Working\")\r\n  }, [state.item]);\r\n\r\n    return (\r\n        <>\r\n\r\n        <CartContext.Provider value={{...state, removeItem, clearCart, increment, decrement }}>\r\n              <ContextCart />\r\n        </CartContext.Provider>\r\n         \r\n         \r\n    \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\items.jsx",["55"],"import React, {useContext} from 'react'\r\n\r\nimport {Products} from './products'\r\nimport {CartContext} from './Cart';\r\n \r\nconst Items = ({id, img, title, description,price, quantity}) => {\r\nconst { removeItem, increment, decrement  } = useContext(CartContext);\r\n\r\n    return (\r\n        <>\r\n         <div className=\"items_info\">\r\n                    <div className=\"product_img\">\r\n                        <img src={img} alt=\"\"/>\r\n                    </div>\r\n                <div className=\"title\">\r\n                    <h2>{title}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n\r\n                <div className=\"add_minus_quanity\">\r\n                    <h2 onClick={() => decrement(id)}> - </h2>\r\n                    <input type=\"text\" name=\"\" placeholder={quantity} id=\"\"/>\r\n                    <h2 onClick={() => increment(id)}> + </h2>\r\n                </div>\r\n\r\n                <div className=\"price\">\r\n                    <h3>{price}</h3>\r\n                </div>\r\n\r\n                <div className=\"button_remove\">\r\n                    <button onClick={() => removeItem(id)}  >Remove</button>\r\n                \r\n                </div>\r\n                </div> \r\n                    <hr/>\r\n               \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Items\r\n",["56","57"],"E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\products.jsx",[],"E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\ContextCart.jsx",[],"E:\\reactpro\\Previous\\Ecommerce\\src\\Components\\reducer.jsx",["58","59"],"\r\n\r\nexport const reducer = (state, action) => {\r\n       \r\n\r\n        if(action.type === \"REMOVE_ITEM\") {\r\n                return {\r\n                        ...state,\r\n                        item: state.item.filter((curElem) => {\r\n                                return curElem.id != action.payload;\r\n                        }),\r\n                };\r\n        }\r\n\r\n        if(action.type === \"CLEAR_CART\") {\r\n                return {\r\n                        ...state,\r\n                        item: [],\r\n                };\r\n        }\r\n\r\n        if(action.type === \"INCREMENT\") {\r\n               let updatedCart = state.item.map((curElem) => {\r\n                if (curElem.id === action.payload) {\r\n                   return { ...curElem, quantity:curElem.quantity + 1};\r\n                }\r\n                return curElem;\r\n               })\r\n               return { ...state, item: updatedCart };\r\n        }\r\n\r\n        if(action.type === \"DECREMENT\") {\r\n                let updatedCart = state.item.map((curElem) => {\r\n                        if (curElem.id === action.payload) {\r\n                           return { ...curElem, quantity:curElem.quantity - 1};\r\n                        }\r\n                        return curElem;\r\n                       })\r\n                       .filter((curElem) => curElem.quantity != 0); \r\n                       \r\n                       // if quanity is 0 then its remove that items\r\n\r\n\r\n                       return { ...state, item: updatedCart };\r\n\r\n        }\r\n\r\n        if(action.type === \"GET_TOTAL\") {\r\n            let { totalItem, totalAmount } = state.item.reduce (\r\n                    (accum, curVal) => {\r\n                    let { quantity, price } = curVal;\r\n\r\n                    let updatedtotalAmount = price * quantity;\r\n                    accum.totalAmount += updatedtotalAmount\r\n                    accum.totalItem += quantity;\r\n                    return accum;\r\n            }, \r\n            {\r\n                totalItem: 0,\r\n                totalAmount: 0,\r\n            }\r\n            );\r\n            return { ...state, totalItem, totalAmount  };\r\n        }\r\n return state;\r\n};\r\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":26,"nodeType":"66","messageId":"67","endLine":1,"endColumn":35},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","replacedBy":"69"},{"ruleId":"64","severity":1,"message":"70","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":13},{"ruleId":"64","severity":1,"message":"71","line":3,"column":9,"nodeType":"66","messageId":"67","endLine":3,"endColumn":17},{"ruleId":"60","replacedBy":"72"},{"ruleId":"62","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":10,"column":51,"nodeType":"76","messageId":"77","endLine":10,"endColumn":53},{"ruleId":"74","severity":1,"message":"75","line":39,"column":62,"nodeType":"76","messageId":"77","endLine":39,"endColumn":64},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["78"],["79"],"'Items' is defined but never used.","'Products' is defined but never used.",["78"],["79"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]